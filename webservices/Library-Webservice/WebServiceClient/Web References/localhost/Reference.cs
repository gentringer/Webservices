//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace WebServiceClient.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback RechercheParISBNOperationCompleted;
        
        private System.Threading.SendOrPostCallback RechercheParAteurOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnexionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestDeConnexionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AjoutCommentaireOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecupCommentaireOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::WebServiceClient.Properties.Settings.Default.WebServiceClient_localhost_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event RechercheParISBNCompletedEventHandler RechercheParISBNCompleted;
        
        /// <remarks/>
        public event RechercheParAteurCompletedEventHandler RechercheParAteurCompleted;
        
        /// <remarks/>
        public event ConnexionCompletedEventHandler ConnexionCompleted;
        
        /// <remarks/>
        public event TestDeConnexionCompletedEventHandler TestDeConnexionCompleted;
        
        /// <remarks/>
        public event AjoutCommentaireCompletedEventHandler AjoutCommentaireCompleted;
        
        /// <remarks/>
        public event RecupCommentaireCompletedEventHandler RecupCommentaireCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RechercheParISBN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RechercheParISBN(string isbn) {
            object[] results = this.Invoke("RechercheParISBN", new object[] {
                        isbn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RechercheParISBNAsync(string isbn) {
            this.RechercheParISBNAsync(isbn, null);
        }
        
        /// <remarks/>
        public void RechercheParISBNAsync(string isbn, object userState) {
            if ((this.RechercheParISBNOperationCompleted == null)) {
                this.RechercheParISBNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRechercheParISBNOperationCompleted);
            }
            this.InvokeAsync("RechercheParISBN", new object[] {
                        isbn}, this.RechercheParISBNOperationCompleted, userState);
        }
        
        private void OnRechercheParISBNOperationCompleted(object arg) {
            if ((this.RechercheParISBNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RechercheParISBNCompleted(this, new RechercheParISBNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RechercheParAteur", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] RechercheParAteur(string auteur) {
            object[] results = this.Invoke("RechercheParAteur", new object[] {
                        auteur});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void RechercheParAteurAsync(string auteur) {
            this.RechercheParAteurAsync(auteur, null);
        }
        
        /// <remarks/>
        public void RechercheParAteurAsync(string auteur, object userState) {
            if ((this.RechercheParAteurOperationCompleted == null)) {
                this.RechercheParAteurOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRechercheParAteurOperationCompleted);
            }
            this.InvokeAsync("RechercheParAteur", new object[] {
                        auteur}, this.RechercheParAteurOperationCompleted, userState);
        }
        
        private void OnRechercheParAteurOperationCompleted(object arg) {
            if ((this.RechercheParAteurCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RechercheParAteurCompleted(this, new RechercheParAteurCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Connexion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Connexion(string nomabonne, string pswabonne) {
            object[] results = this.Invoke("Connexion", new object[] {
                        nomabonne,
                        pswabonne});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConnexionAsync(string nomabonne, string pswabonne) {
            this.ConnexionAsync(nomabonne, pswabonne, null);
        }
        
        /// <remarks/>
        public void ConnexionAsync(string nomabonne, string pswabonne, object userState) {
            if ((this.ConnexionOperationCompleted == null)) {
                this.ConnexionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnexionOperationCompleted);
            }
            this.InvokeAsync("Connexion", new object[] {
                        nomabonne,
                        pswabonne}, this.ConnexionOperationCompleted, userState);
        }
        
        private void OnConnexionOperationCompleted(object arg) {
            if ((this.ConnexionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnexionCompleted(this, new ConnexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestDeConnexion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestDeConnexion(string nomabonne, string pswabonne) {
            object[] results = this.Invoke("TestDeConnexion", new object[] {
                        nomabonne,
                        pswabonne});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestDeConnexionAsync(string nomabonne, string pswabonne) {
            this.TestDeConnexionAsync(nomabonne, pswabonne, null);
        }
        
        /// <remarks/>
        public void TestDeConnexionAsync(string nomabonne, string pswabonne, object userState) {
            if ((this.TestDeConnexionOperationCompleted == null)) {
                this.TestDeConnexionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestDeConnexionOperationCompleted);
            }
            this.InvokeAsync("TestDeConnexion", new object[] {
                        nomabonne,
                        pswabonne}, this.TestDeConnexionOperationCompleted, userState);
        }
        
        private void OnTestDeConnexionOperationCompleted(object arg) {
            if ((this.TestDeConnexionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestDeConnexionCompleted(this, new TestDeConnexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AjoutCommentaire", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AjoutCommentaire(string nomabonne, string pswabonne, string isbn, string commentaire) {
            object[] results = this.Invoke("AjoutCommentaire", new object[] {
                        nomabonne,
                        pswabonne,
                        isbn,
                        commentaire});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AjoutCommentaireAsync(string nomabonne, string pswabonne, string isbn, string commentaire) {
            this.AjoutCommentaireAsync(nomabonne, pswabonne, isbn, commentaire, null);
        }
        
        /// <remarks/>
        public void AjoutCommentaireAsync(string nomabonne, string pswabonne, string isbn, string commentaire, object userState) {
            if ((this.AjoutCommentaireOperationCompleted == null)) {
                this.AjoutCommentaireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAjoutCommentaireOperationCompleted);
            }
            this.InvokeAsync("AjoutCommentaire", new object[] {
                        nomabonne,
                        pswabonne,
                        isbn,
                        commentaire}, this.AjoutCommentaireOperationCompleted, userState);
        }
        
        private void OnAjoutCommentaireOperationCompleted(object arg) {
            if ((this.AjoutCommentaireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AjoutCommentaireCompleted(this, new AjoutCommentaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecupCommentaire", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] RecupCommentaire(string isbn) {
            object[] results = this.Invoke("RecupCommentaire", new object[] {
                        isbn});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void RecupCommentaireAsync(string isbn) {
            this.RecupCommentaireAsync(isbn, null);
        }
        
        /// <remarks/>
        public void RecupCommentaireAsync(string isbn, object userState) {
            if ((this.RecupCommentaireOperationCompleted == null)) {
                this.RecupCommentaireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecupCommentaireOperationCompleted);
            }
            this.InvokeAsync("RecupCommentaire", new object[] {
                        isbn}, this.RecupCommentaireOperationCompleted, userState);
        }
        
        private void OnRecupCommentaireOperationCompleted(object arg) {
            if ((this.RecupCommentaireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecupCommentaireCompleted(this, new RecupCommentaireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RechercheParISBNCompletedEventHandler(object sender, RechercheParISBNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RechercheParISBNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RechercheParISBNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RechercheParAteurCompletedEventHandler(object sender, RechercheParAteurCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RechercheParAteurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RechercheParAteurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConnexionCompletedEventHandler(object sender, ConnexionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnexionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnexionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestDeConnexionCompletedEventHandler(object sender, TestDeConnexionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestDeConnexionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestDeConnexionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AjoutCommentaireCompletedEventHandler(object sender, AjoutCommentaireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AjoutCommentaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AjoutCommentaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RecupCommentaireCompletedEventHandler(object sender, RecupCommentaireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecupCommentaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecupCommentaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591